// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement()) @map("userId")
  email String @db.VarChar(100) @unique
  password  String 
  recipes Recipe[]
  reviews Review[]
}

model Ingredient {
  id Int  @id @default(autoincrement()) @map("ingredientId")
  name String @db.VarChar(100) @unique
  category String?
  recipes IngredientRecipe[]
}

model Recipe {
  id      Int      @id @default(autoincrement()) @map("recipeId")
  title   String   @db.VarChar(100) @unique
  type String  @db.VarChar(100)
  description String? @db.VarChar(255)
  duration Int?
  userId Int?
  user User? @relation(fields: [userId], references: [id],  onDelete: SetNull, onUpdate: Cascade)
  photoUrl String? @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  reviews Review[]
  ingredients IngredientRecipe[]
  procedures ProcedureRecipe[]
}

model Review {
  id      Int      @id @default(autoincrement()) @map("reviewId")
  recipeId Int
  recipe Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int?
  user User? @relation(fields: [userId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  comment String
}

model IngredientRecipe {
  ingredientId Int
  ingredient Ingredient @relation(fields: [ingredientId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  recipeId Int 
  recipe Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  amount String

  @@id([ingredientId, recipeId])
}

model ProcedureRecipe {
  procedureId Int
  recipeId Int 
  recipe Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  description String

  @@id([procedureId, recipeId])

}